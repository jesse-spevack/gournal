<% content_for :title, "Japanese Bullet Journal Design System" %>

<div class="design-system-container">
  <div class="style-guide-header">
    <h1>Japanese Bullet Journal Design System</h1>
    <p>Japanese Paper & Fountain Pen Aesthetic</p>
  </div>

  <div class="style-guide-section">
    <%= render 'style_guide/color_palette' %>
  </div>

  <div class="style-guide-section">
    <%= render 'style_guide/typography' %>
  </div>

  <div class="style-guide-section">
    <%= render 'style_guide/spacing_system' %>
  </div>

  <div class="style-guide-section">
    <%= render 'style_guide/checkbox_variations' %>
  </div>

  <div class="style-guide-section">
    <%= render 'style_guide/checkbox_mixed_demo' %>
  </div>

  <div class="style-guide-section">
    <%= render 'style_guide/checkbox_random_variations' %>
  </div>

  <div class="style-guide-section">
    <%= render 'style_guide/checkbox_helper_demo' %>
  </div>
</div>

<script>
// Add interactive checkbox functionality
document.addEventListener('DOMContentLoaded', function() {
  const checkboxWrappers = document.querySelectorAll('.checkbox-wrapper');
  
  checkboxWrappers.forEach(function(wrapper) {
    const checkbox = wrapper.querySelector('input[type="checkbox"]');
    const xMark = wrapper.querySelector('.x-mark');
    const boxPath = wrapper.querySelector('.box-path');
    
    if (checkbox && xMark) {
      // Set initial state based on checkbox checked status
      updateCheckboxVisual(checkbox, xMark, boxPath);
      
      // Add click event listener
      checkbox.addEventListener('change', function() {
        updateCheckboxVisual(checkbox, xMark, boxPath);
      });
    }
  });
  
  function updateCheckboxVisual(checkbox, xMark, boxPath) {
    if (checkbox.checked) {
      // Show X mark and update styling for checked state
      xMark.classList.add('show');
      if (boxPath) {
        boxPath.style.stroke = 'var(--ink-hover)';
        boxPath.style.strokeWidth = '1.6';
        boxPath.style.opacity = '0.95';
      }
    } else {
      // Hide X mark and revert to unchecked styling
      xMark.classList.remove('show');
      if (boxPath) {
        boxPath.style.stroke = 'var(--ink-primary)';
        boxPath.style.strokeWidth = '1.4';
        boxPath.style.opacity = '0.85';
      }
    }
  }
});
</script>